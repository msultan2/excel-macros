program:
(
time: 1211108057
vers: 3.0
gencompat: 0
)
folder:
(
name: System
global: 1
readonly: 1
card:
(
name: True
desc: "The system constant True"
type: boolean
readonly: 1
length: 1
cval: True
)
card:
(
name: False
desc: "The system constant False"
type: boolean
readonly: 1
length: 1
cval: False
)
folder:
(
name: Constants
readonly: 1
card:
(
name: MSTokenLen
desc: "The number of storage characters (bytes) used by an MS Token"
type: number
readonly: 1
length: 2
cval: 41
)
card:
(
name: EmptyMSToken
desc: "An MS Token with a constant empty value"
type: MStoken
readonly: 1
)
card:
(
name: Spaces
desc: "The system constant all blanks"
type: string
readonly: 1
fig: 1
length: 1
cval: " "
)
card:
(
name: Zeros
desc: "The system constant all 0's"
type: string
readonly: 1
fig: 1
length: 1
cval: 0
)
card:
(
name: LowValues
desc: "The system constant all binary zeros"
type: string
readonly: 1
fig: 1
length: 1
cval: \00
)
card:
(
name: HighValues
desc: "The system constant all binary ones"
type: string
readonly: 1
fig: 1
length: 1
cval: \7f
)
card:
(
name: None
desc: "The string 'None'"
type: string
readonly: 1
length: 4
cval: None
)
card:
(
name: Any
desc: "The string 'Any'"
type: string
readonly: 1
length: 3
cval: Any
)
card:
(
name: All
desc: "The string 'All'"
type: string
readonly: 1
length: 3
cval: All
)
card:
(
name: Flush
desc: "The string 'flush' [for DTMF/Player Resource Control]"
type: string
readonly: 1
length: 5
cval: flush
)
card:
(
name: On
desc: "The string 'on' [for Resource Control]"
type: string
readonly: 1
length: 2
cval: on
)
card:
(
name: Off
desc: "The string 'off' [for Resource Control]"
type: string
readonly: 1
length: 3
cval: off
)
card:
(
name: Speech
desc: "The string 'S' [Input type 'Speech']"
type: string
readonly: 1
length: 1
cval: S
)
card:
(
name: DTMF
desc: "The string 'D' [Input type 'DTMF']"
type: string
readonly: 1
length: 1
cval: D
)
)
card:
(
name: LastSelection
desc: "The most recent value entered in a Select Block"
type: string
readonly: 1
length: 1
)
card:
(
name: LastEntry
desc: "The most recent value entered in a Read Phone Block"
type: string
readonly: 1
length: 128
)
card:
(
name: LastEntryLen
desc: "The number of characters in LastEntry"
type: number
readonly: 1
length: 3
)
card:
(
name: LastCondition
desc: "The name of the most recently occurring condition"
type: string
readonly: 1
length: 12
)
card:
(
name: ConditionData
desc: "The optional data from the most recently occurring condition"
type: string
readonly: 1
length: 128
)
card:
(
name: ItemPrefix
desc: "The language prefix for the current vocabulary"
type: string
length: 10
)
card:
(
name: DialedNumber
desc: "The dialed number"
type: string
readonly: 1
length: 36
)
card:
(
name: DialedNumberLen
desc: "The length of DialedNumber"
type: number
readonly: 1
length: 2
)
card:
(
name: CallerNumber
desc: "The caller's number"
type: string
readonly: 1
length: 36
)
card:
(
name: CallerNumberLen
desc: "The length of CallerNumber"
type: number
readonly: 1
length: 2
)
card:
(
name: AutoDetectTime
desc: "Auto_Identify input detect timeout (in seconds)"
type: number
length: 7
cval: 10
)
card:
(
name: DefaultCID
desc: "Default Connection ID"
type: string
readonly: 1
length: 40
)
card:
(
name: DefaultOutPool
desc: "Default Pool for Transfer"
type: string
readonly: 1
length: 128
cval: line.out
)
card:
(
name: TransferCID
desc: "Transfer Connection ID"
type: string
readonly: 1
length: 40
)
card:
(
name: DefaultTTSRsc
desc: "Default Text-to-Speech Resource"
type: string
length: 128
cval: extts-b
)
card:
(
name: ApplicationNumber
desc: "The application number"
type: number
readonly: 1
length: 5
)
card:
(
name: SystemNumber
desc: "The system number on which the application is executing"
type: number
readonly: 1
length: 5
)
card:
(
name: CallNotConnected
desc: "True if the application is not connected to a call"
type: boolean
readonly: 1
length: 1
)
card:
(
name: NumberOfRecords
desc: "The number of deleted records in Delete operation with generic key"
type: number
readonly: 1
length: 6
)
card:
(
name: RecordLength
desc: "The length of a retrieved record or recorded caller message"
type: number
readonly: 1
length: 5
)
card:
(
name: TTSRscMode
desc: "Text-to-Speech Resource mode"
type: string
length: 64
cval: NORM
)
folder:
(
name: SQL_Info
readonly: 1
card:
(
name: return_code
desc: "Return code from RDBMS server"
type: number
readonly: 1
length: 8
)
card:
(
name: RdbmsMsg
desc: "Return Error/Info Message from RDBMS server"
type: string
readonly: 1
length: 256
)
)
folder:
(
name: CORBA_Info
readonly: 1
card:
(
name: return_code
desc: "Return code from CORBA server"
type: number
readonly: 1
length: 8
)
card:
(
name: CorbaMsg
desc: "Return Error/Info Message from CORBA server"
type: string
readonly: 1
length: 256
)
)
union:
(
name: MapCursorRead
hidden: 1
card:
(
name: MapRealCursor
type: string
hidden: 1
length: 6
)
folder:
(
name: MapRedefCursor
hidden: 1
card:
(
name: MapCursorRow
type: number
hidden: 1
length: 3
)
card:
(
name: MapCursorCol
type: number
hidden: 1
length: 3
)
)
)
union:
(
name: ExtendedToken
hidden: 1
card:
(
name: Full
type: string
hidden: 1
length: 51
)
folder:
(
name: Section
hidden: 1
card:
(
name: Token
type: string
hidden: 1
length: 41
)
card:
(
name: Extension
type: string
hidden: 1
length: 10
)
)
)
)
union:
(
name: xml
folder:
(
name: xmlrpc
folder:
(
name: Ericxmlrpcv1_2
union:
(
name: AdjustmentTRequest
folder:
(
name: AdjustmentTRequest
card:
(
name: Function
type: string
length: 32
cval: AdjustmentT
)
card:
(
name: version
type: string
length: 5
cval: 1.2
)
card:
(
name: originNodeType
type: string
length: 32
)
card:
(
name: originHostName
type: string
length: 32
)
card:
(
name: originTransactionID
type: string
length: 32
)
union:
(
name: originTimeStamp
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
card:
(
name: subscriberNumberNAI
type: number
length: 2
)
card:
(
name: subscriberNumber
type: string
length: 20
)
card:
(
name: messageCapabilityFlag
type: string
length: 10
)
card:
(
name: transactionCurrency
type: string
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 12
)
folder:
(
name: dedicatedAccountInformation
card:
(
name: numofdedicatedAccountInformation
type: number
length: 3
)
folder:
(
name: adjustmentTdedicatedAccountInformation0
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation1
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation2
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation3
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation4
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation5
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation6
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation7
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation8
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
folder:
(
name: adjustmentTdedicatedAccountInformation9
card:
(
name: dedicatedAccountID
type: number
length: 3
)
card:
(
name: adjustmentAmount
type: string
length: 18
)
card:
(
name: relativeDateAdjustment
type: number
length: 6
)
union:
(
name: newExpiryDate
card:
(
name: DateYYYYMMDDHHMMSS
type: string
length: 14
)
folder:
(
name: Date
card:
(
name: YYYY
type: string
length: 4
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: DD
type: string
length: 2
)
card:
(
name: HH
type: string
length: 2
)
card:
(
name: MM
type: string
length: 2
)
card:
(
name: SS
type: string
length: 2
)
)
)
)
)
card:
(
name: externalData1
type: string
length: 128
)
card:
(
name: externalData2
type: string
length: 128
)
card:
(
name: relativeDateAdjustmentSupervision
type: string
length: 8
)
card:
(
name: relativeDateAdjustmentServiceFee
type: string
length: 8
)
card:
(
name: terminator
type: string
length: 1
cval: X
)
)
card:
(
name: String
type: string
length: 876
cval: 1.2
)
)
union:
(
name: AdjustmentTResponse
folder:
(
name: AdjustmentTResponse
card:
(
name: Function
type: string
length: 32
cval: AdjustmentT
)
card:
(
name: version
type: string
length: 5
cval: 1.2
)
card:
(
name: responseCode
type: number
length: 4
)
card:
(
name: terminator
type: string
length: 1
cval: X
)
)
card:
(
name: String
type: string
length: 44
cval: 1.2
)
)
)
folder:
(
name: Constants
card:
(
name: OriginHostname
type: string
length: 20
cval: TESTMPS
)
card:
(
name: OriginHosttype
type: string
length: 20
cval: EXT
)
card:
(
name: DefaultCurrency
type: string
length: 20
cval: EGP
)
)
)
card:
(
name: Params
type: string
length: 1497
)
)
folder:
(
name: TransactionId
shared: 1
card:
(
name: TransactionID
type: number
length: 1
)
)
folder:
(
name: Java
folder:
(
name: reloadconfig
card:
(
name: class
type: string
length: 25
cval: XmlrpcClient
)
card:
(
name: method
type: string
length: 13
cval: reloadconfig
)
card:
(
name: prm
occurs: 2
type: string
length: 16
)
)
folder:
(
name: Timeout
card:
(
name: timeout
type: number
length: 5
)
)
folder:
(
name: Call
card:
(
name: methref
type: string
length: 10
)
card:
(
name: val
occurs: 2
type: string
length: 4048
)
)
folder:
(
name: xmlrpc
card:
(
name: class
type: string
length: 25
cval: XmlrpcClient
)
card:
(
name: method
type: string
length: 13
cval: xmlrpccall
)
card:
(
name: prm
occurs: 2
type: string
length: 16
cval: "\"String\""
)
)
)
folder:
(
name: K
card:
(
name: MSISDN
type: string
length: 9
)
card:
(
name: CallString
type: number
length: 3
cval: 1
)
)
folder:
(
name: Data
card:
(
name: msg
type: string
length: 160
)
card:
(
name: resource
type: string
length: 6
cval: jservd
)
)
folder:
(
name: AVS
card:
(
name: buf
type: string
length: 2000
)
card:
(
name: buflen
type: number
length: 3
)
)
param:
(
name: param
card:
(
name: msisdn
desc: MSISDN
type: string
length: 20
)
card:
(
name: ammount
desc: "Amount (Pt)"
type: number
length: 8
)
card:
(
name: deduct
desc: "Deduct ?"
type: boolean
length: 1
)
card:
(
name: Ext_Data1
desc: "External Data 1"
type: string
length: 128
)
card:
(
name: Ext_Data2
desc: "External Data 2"
type: string
length: 128
)
card:
(
name: Rel_Date_Adj_Supervision
desc: "Relative Date Adj Supervision"
type: string
length: 8
)
card:
(
name: Rel_Date_Adj_Service
desc: "Relative Date Adj Service Fee"
type: string
length: 8
)
card:
(
name: responseCode
desc: "Response Code"
type: number
return: 1
length: 4
)
)
folder:
(
name: local
card:
(
name: calc
type: number
length: 8
)
)
datafiles:
(
)
block:
(
name: Adjustment
X: 0
Y: 0
type: Container
Container:
(
looptype: 0
loopcntl: 1
width: 0
height: 0
block:
(
name: Entry
X: 47
Y: 29
nodelete: 1
type: Entry
next_block: Failure
)
block:
(
name: Exit
X: 157
Y: 510
nodelete: 1
type: Exit
)
block:
(
name: "-> EndPgm"
X: 134
Y: 585
noicon: 1
type: Connector
Connector:
(
type: dest
)
next_block: Exit
)
block:
(
name: Failure
X: 83
Y: 13
type: Context
Context:
(
width: 490
height: 683
block:
(
name: "  $getfail  "
X: 286
Y: 79
noicon: 1
type: Condition
Condition:
(
)
next_block: ErrMsg
)
block:
(
name: "    $inf    "
X: 135
Y: 77
noicon: 1
type: Condition
Condition:
(
)
next_block: ErrMsg
)
block:
(
name: FailMsg
X: 235
Y: 281
type: System
System:
(
function: Display
operand1: Data.msg
)
next_block: "EndPgm ->"
)
block:
(
name: "EndPgm ->"
X: 228
Y: 377
noicon: 1
type: Connector
Connector:
(
type: source
)
)
block:
(
name: ErrMsg
X: 235
Y: 191
type: Compute
Assign:
(
assign: "Data.msg <- \"error condition \" + System.LastCondition + \" : \" + System.ConditionData "
)
next_block: FailMsg
)
block:
(
name: "    $of     "
X: 79
Y: 164
noicon: 1
type: Condition
Condition:
(
)
next_block: ErrMsg
)
block:
(
name: ctrlrsrcfail
X: 348
Y: 187
noicon: 1
type: Condition
Condition:
(
)
next_block: ErrMsg
)
)
next_block: GetJava
)
block:
(
name: "get date time"
X: 450
Y: 193
type: Container
Container:
(
looptype: 0
loopcntl: 1
width: 600
height: 682
param:
(
name: originTimeStamp
card:
(
name: DateYYYYMMDDHHMMSS
type: string
return: 1
length: 14
)
)
block:
(
name: Entry
X: 287
Y: 20
nodelete: 1
type: Entry
next_block: "date time"
)
block:
(
name: Exit
X: 287
Y: 636
nodelete: 1
type: Exit
)
block:
(
name: "date time"
X: 271
Y: 83
type: System
System:
(
function: DateTime
operand1: originTimeStamp.DateYYYYMMDDHHMMSS
)
next_block: Exit
)
)
next_block: Connector2
)
block:
(
name: Connector1
X: 474
Y: 14
type: Connector
Connector:
(
type: anchor
)
next_block: gettransid
)
block:
(
name: Connector2
X: 474
Y: 307
type: Connector
Connector:
(
type: finish
)
)
block:
(
name: gettransid
X: 450
Y: 82
type: Container
Container:
(
looptype: 0
loopcntl: 1
width: 600
height: 682
param:
(
name: param
card:
(
name: tranactionid
type: string
return: 1
length: 20
)
)
union:
(
name: local
card:
(
name: allTransId
type: string
length: 20
)
folder:
(
name: parts
card:
(
name: MPSNo
type: number
length: 3
)
card:
(
name: LineNo
type: number
length: 3
)
card:
(
name: Datetime
type: string
length: 14
)
)
)
block:
(
name: Entry
X: 287
Y: 20
nodelete: 1
type: Entry
next_block: datetime
)
block:
(
name: Exit
X: 287
Y: 636
nodelete: 1
type: Exit
)
block:
(
name: Comput1
X: 271
Y: 299
type: Compute
Assign:
(
assign: "local.parts.MPSNo <- System.SystemNumber "
assign: "local.parts.LineNo <- System.ApplicationNumber "
assign: "param.tranactionid <- local.allTransId "
)
next_block: Exit
)
block:
(
name: datetime
X: 271
Y: 193
type: System
System:
(
function: GMT
operand1: local.parts.Datetime
)
next_block: Comput1
)
)
next_block: "get date time"
)
block:
(
name: set
X: 243
Y: 83
notes: "get the method reference for the method paymentString"
type: Compute
Assign:
(
assign: "AVS.buf {=ToAVS} Java.xmlrpc "
)
next_block: "Set method"
)
block:
(
name: GetJava
X: 243
Y: 13
notes: "Get the jsb resource"
type: Resource
Resource:
(
resource: jsb
wait: 1
operation: Get
cid: ""
line_cid: System.DefaultCID
)
next_block: set
)
block:
(
name: "Set method"
X: 243
Y: 156
type: Resource
Resource:
(
resource: jsb
wait: 1
operation: Control
message: AVS.buf
cid: System.DefaultCID
)
next_block: CompleteMsg
)
block:
(
name: Msg
X: 243
Y: 304
comment: 1
type: System
System:
(
function: Display
operand1: Data.msg
)
next_block: SndRcv
)
block:
(
name: CompleteMsg
X: 243
Y: 227
notes: "Got the method reference back from jsb for the method paymentString through condition 'oc' and condition data.

condition data contains the method reference.
"
type: Compute
Assign:
(
assign: "Java.Call.methref <- System.ConditionData "
assign: "Data.msg <- \"received condition \" + System.LastCondition + \" : \" + Java.Call.methref "
)
next_block: Msg
)
block:
(
name: Free
X: 243
Y: 494
type: Resource
Resource:
(
resource: jsb
wait: 1
operation: Free
cid: System.DefaultCID
)
next_block: Exit
)
block:
(
name: SndRcv
X: 235
Y: 400
notes: "call the method paymentString using methodref and param values and receive the value back."
type: Container
Container:
(
looptype: 0
loopcntl: 1
width: 600
height: 682
block:
(
name: Send
X: 186
Y: 487
type: Resource
Resource:
(
resource: jsb
wait: 1
operation: Send
message: AVS.buf
cid: System.DefaultCID
length: AVS.buflen
)
next_block: Receive
)
block:
(
name: Entry
X: 287
Y: 20
nodelete: 1
type: Entry
next_block: Refer9
)
block:
(
name: Exit
X: 287
Y: 670
nodelete: 1
type: Exit
)
block:
(
name: accumulatorEnqu
X: 271
Y: 243
type: Compute
Assign:
(
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.originNodeType <- \"IVR\" "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.originHostName <- \"mpsivr1\" "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.subscriberNumberNAI <- 2"
)
compute:
(
comment: 1
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.messageCapabilityFlag <- param.MSG_Cap_Flag "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.externalData1 <- param.Ext_Data1 "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.externalData2 <- param.Ext_Data2 "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.relativeDateAdjustmentSupervision <- param.Rel_Date_Adj_Supervision "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.relativeDateAdjustmentServiceFee <- param.Rel_Date_Adj_Service "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.subscriberNumber <- param.msisdn "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.transactionCurrency <- \"EGP\" "
)
compute:
(
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.adjustmentAmount {=ToString} param.ammount "
)
compute:
(
assign: "Java.Call.val ( 1 ) <- xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.String "
)
compute:
(
assign: "AVS.buf {=ToAVS} Java.Call "
)
)
next_block: deduct?
)
block:
(
name: Receive
X: 267
Y: 487
type: Resource
Resource:
(
resource: jsb
wait: 1
operation: Receive
message: xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTResponse.String
cid: System.DefaultCID
)
next_block: Received
)
block:
(
name: Received
X: 267
Y: 562
type: System
System:
(
function: Display
operand1: "\"Received: \" "
operand2: xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTResponse.String
)
next_block: Exit
)
block:
(
name: deduct?
X: 271
Y: 310
type: Switch
Switch:
(
else: Else
built: 1
comparand: "True: param.deduct {IsTrue} "
caseblock:
(
name: True
X: 182
Y: 329
nodelete: 1
noicon: 1
type: Case
next_block: reduce
)
caseblock:
(
name: Else
X: 277
Y: 385
nodelete: 1
noicon: 1
type: Case
next_block: trim-spaces
)
)
)
block:
(
name: reduce
X: 176
Y: 364
type: Compute
Assign:
(
assign: "local.calc <- 0 - param.ammount "
assign: "xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.adjustmentAmount {=ToString} local.calc "
assign: "Java.Call.val ( 1 ) <- xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.String "
assign: "AVS.buf {=ToAVS} Java.Call "
)
next_block: trim-spaces
)
block:
(
name: Refer9
X: 263
Y: 64
type: Reference
Reference:
(
parm: xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.originTransactionID
refers_to: gettransid
)
next_block: Refer11
)
block:
(
name: Refer11
X: 263
Y: 159
type: Reference
Reference:
(
parm: xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTRequest.AdjustmentTRequest.originTimeStamp.DateYYYYMMDDHHMMSS
refers_to: "get date time"
)
next_block: accumulatorEnqu
)
block:
(
name: trim-spaces
X: 269
Y: 421
type: System
System:
(
function: CallFunction
operand1: "\"trim-spaces\" "
operand2: AVS.buf
operand3: AVS.buflen
)
next_block: Send
)
)
next_block: Response
)
block:
(
name: Response
X: 352
Y: 413
type: Compute
Assign:
(
assign: "param.responseCode <- xml.xmlrpc.Ericxmlrpcv1_2.AdjustmentTResponse.AdjustmentTResponse.responseCode "
)
next_block: Free
)
)
)
